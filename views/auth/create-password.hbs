<div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-md w-full space-y-8">
    <div>
      <h2 class="mt-6 text-center text-3xl font-extrabold text-primary">
        Create your password
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600">
        Step 2: Set up your account password
      </p>
    </div>
    <form class="mt-8 space-y-6" id="createPasswordForm">
      <div class="rounded-md shadow-sm -space-y-px">
        <!-- Password -->
        <div class="mb-4">
          <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
          <input id="password" name="password" type="password" autocomplete="new-password" required
            class="appearance-none rounded relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm"
            placeholder="Create a password">
          <p class="mt-1 text-sm text-gray-500">Password must be at least 6 characters long</p>
        </div>

        <div class="mb-4">
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm Password</label>
          <input id="confirmPassword" name="confirmPassword" type="password" autocomplete="new-password" required
            class="appearance-none rounded relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm"
            placeholder="Confirm your password">
        </div>
      </div>

      <div>
        <button type="submit"
          class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
          Create Account
        </button>
      </div>

      <div id="errorMessage" class="hidden rounded-md bg-red-50 p-4">
        <div class="flex">
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800"></h3>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>

<script>
  // Check if user has verified phone number
  window.addEventListener('load', function() {
    const verifiedPhone = localStorage.getItem('verifiedPhone');
    if (!verifiedPhone) {
      window.location.href = '/auth/signup';
    }
  });

  // Handle form submission
  document.getElementById('createPasswordForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    const phone_number = localStorage.getItem('verifiedPhone');

    if (password !== confirmPassword) {
      const errorDiv = document.getElementById('errorMessage');
      errorDiv.classList.remove('hidden');
      errorDiv.querySelector('h3').textContent = 'Passwords do not match.';
      return;
    }

    if (password.length < 6) {
      const errorDiv = document.getElementById('errorMessage');
      errorDiv.classList.remove('hidden');
      errorDiv.querySelector('h3').textContent = 'Password must be at least 6 characters long.';
      return;
    }

    try {
      const response = await fetch('/auth/create-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ phone_number, password, confirmPassword }),
      });

      const data = await response.json();

      if (data.success) {
        // Store token and user info
        localStorage.setItem('token', data.token);
        localStorage.setItem('user', JSON.stringify(data.user));
        // Clear verified phone
        localStorage.removeItem('verifiedPhone');
        // Redirect to home page
        window.location.href = '/';
      } else {
        // Show error message
        const errorDiv = document.getElementById('errorMessage');
        errorDiv.classList.remove('hidden');
        errorDiv.querySelector('h3').textContent = data.message;
      }
    } catch (error) {
      console.error('Error:', error);
      const errorDiv = document.getElementById('errorMessage');
      errorDiv.classList.remove('hidden');
      errorDiv.querySelector('h3').textContent = 'An error occurred during account creation.';
    }
  });
</script> 