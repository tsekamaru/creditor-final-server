<div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-md w-full space-y-8">
    <div>
      <h2 class="mt-6 text-center text-3xl font-extrabold text-primary">
        Create your account
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600">
        Step 1: Verify your phone number
      </p>
    </div>
    <form class="mt-8 space-y-6" id="signupForm">
      <div class="rounded-md shadow-sm -space-y-px">
        <!-- Phone Number -->
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700">Phone number</label>
          <div class="flex space-x-2">
            <!-- Country Code -->
            <div class="w-24">
              <input id="countryCode" name="countryCode" type="text" required
                class="appearance-none rounded relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm"
                placeholder="+31" value="+31" maxlength="4">
            </div>
            <!-- Phone Number -->
            <div class="flex-1">
              <input id="phoneNumber" name="phoneNumber" type="tel" required
                class="appearance-none rounded relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm"
                placeholder="615957803" pattern="[0-9]{8,}" title="Phone number must be at least 8 digits">
            </div>
          </div>
          <p class="mt-1 text-sm text-gray-500">Enter your phone number (minimum 8 digits)</p>
        </div>

        <!-- OTP Verification -->
        <div class="mb-4">
          <label for="otp" class="block text-sm font-medium text-gray-700">Verification Code</label>
          <div class="flex space-x-2">
            <button type="button" onclick="requestOTP()"
              class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
              Send Code
            </button>
          </div>
          <input id="otp" name="otp" type="text" autocomplete="off" required
            class="mt-2 appearance-none rounded relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm"
            placeholder="Enter verification code">
        </div>
      </div>

      <div>
        <button type="submit"
          class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
          Verify Phone
        </button>
      </div>

      <div id="errorMessage" class="hidden rounded-md bg-red-50 p-4">
        <div class="flex">
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800"></h3>
          </div>
        </div>
      </div>
    </form>

    <div class="text-center">
      <p class="text-sm text-gray-600">
        Already have an account?
        <a href="/auth/login" class="font-medium text-primary hover:text-primary-dark">
          Sign in
        </a>
      </p>
    </div>
  </div>
</div>

<script>
  function validateAndFormatPhone() {
    const countryCode = document.getElementById('countryCode').value.trim();
    const phoneNumber = document.getElementById('phoneNumber').value.trim();
    
    // Validate country code format
    if (!countryCode.startsWith('+')) {
      alert('Country code must start with +');
      return false;
    }

    // Validate phone number length
    if (phoneNumber.length < 8) {
      alert('Phone number must be at least 8 digits');
      return false;
    }

    return `${countryCode} ${phoneNumber}`;
  }

  // Prevent non-numeric input in phone number field
  document.getElementById('phoneNumber').addEventListener('input', function(e) {
    this.value = this.value.replace(/[^0-9]/g, '');
  });

  // Ensure country code starts with +
  document.getElementById('countryCode').addEventListener('input', function(e) {
    if (!this.value.startsWith('+')) {
      this.value = '+' + this.value.replace(/[^0-9]/g, '');
    } else {
      this.value = '+' + this.value.slice(1).replace(/[^0-9]/g, '');
    }
  });

  function requestOTP() {
    const phone_number = validateAndFormatPhone();
    if (!phone_number) return;

    fetch('/auth/request-otp', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ phone: phone_number }),
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Verification code sent successfully!');
      } else {
        alert('Failed to send verification code: ' + data.message);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Failed to send verification code');
    });
  }

  // Handle form submission
  document.getElementById('signupForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const phone_number = validateAndFormatPhone();
    const otp = document.getElementById('otp').value;

    try {
      const response = await fetch('/auth/signup', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ phone_number, otp }),
      });

      const data = await response.json();

      if (data.success) {
        // Store phone number for password creation
        localStorage.setItem('verifiedPhone', phone_number);
        // Redirect to password creation
        window.location.href = '/auth/create-password';
      } else {
        // Show error message
        const errorDiv = document.getElementById('errorMessage');
        errorDiv.classList.remove('hidden');
        errorDiv.querySelector('h3').textContent = data.message;
      }
    } catch (error) {
      console.error('Error:', error);
      const errorDiv = document.getElementById('errorMessage');
      errorDiv.classList.remove('hidden');
      errorDiv.querySelector('h3').textContent = 'An error occurred during signup.';
    }
  });
</script>