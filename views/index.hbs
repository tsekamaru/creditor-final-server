<div class="text-center py-12">
  <h1 class="text-4xl font-bold text-primary mb-6">Welcome to the Creditor App Backend Development</h1>
  
  <div class="max-w-3xl mx-auto text-left bg-white p-8 rounded-lg shadow-md">
    <p class="text-gray-700 mb-6">
      This is the backend server for the Creditor application, developed by Tseka as the final project for the Ironhack Part-Time Bootcamp. The server provides a robust API for managing customer loans, transactions, and employee operations.
    </p>

    <div class="space-y-6">
      <div>
        <h2 class="text-xl font-semibold text-primary mb-2">Technical Stack</h2>
        <ul class="list-disc list-inside text-gray-600">
          <li>PostgreSQL database for reliable data storage</li>
          <li>Express.js framework for API endpoints</li>
          <li>JWT and Session-based authentication</li>
          <li>RESTful API architecture</li>
        </ul>
      </div>

      <div>
        <h2 class="text-xl font-semibold text-primary mb-2">Available API Endpoints</h2>
        <div class="space-y-4">
          <!-- Users API -->
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="font-semibold text-gray-800 mb-2">Users API <code class="bg-gray-100 px-2 py-1 rounded">/api/users</code></h3>
            <ul class="list-disc list-inside text-gray-600 space-y-1">
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /</code> - Get all users</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /:id</code> - Get user by ID</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">POST /</code> - Create new user</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">PUT /:id</code> - Update user</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">DELETE /:id</code> - Delete user (Admin only)</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">POST /login</code> - User authentication</li>
            </ul>
          </div>

          <!-- Employees API -->
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="font-semibold text-gray-800 mb-2">Employees API <code class="bg-gray-100 px-2 py-1 rounded">/api/employees</code></h3>
            <ul class="list-disc list-inside text-gray-600 space-y-1">
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /</code> - Get all employees</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /:id</code> - Get employee by ID</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">POST /</code> - Create new employee</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">PUT /:id</code> - Update employee</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">DELETE /:id</code> - Delete employee (Admin only)</li>
            </ul>
          </div>

          <!-- Customers API -->
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="font-semibold text-gray-800 mb-2">Customers API <code class="bg-gray-100 px-2 py-1 rounded">/api/customers</code></h3>
            <ul class="list-disc list-inside text-gray-600 space-y-1">
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /</code> - Get all customers</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /:id</code> - Get customer by ID</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /:id/loans</code> - Get customer's loans</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">POST /</code> - Create new customer</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">PUT /:id</code> - Update customer</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">DELETE /:id</code> - Delete customer (Admin only)</li>
            </ul>
          </div>

          <!-- Loans API -->
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="font-semibold text-gray-800 mb-2">Loans API <code class="bg-gray-100 px-2 py-1 rounded">/api/loans</code></h3>
            <ul class="list-disc list-inside text-gray-600 space-y-1">
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /</code> - Get all loans</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /:id</code> - Get loan by ID</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">POST /</code> - Create new loan</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">PUT /:id</code> - Update loan</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">PUT /:id/payment</code> - Process loan payment</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">DELETE /:id</code> - Delete loan (Admin only)</li>
            </ul>
          </div>

          <!-- Transactions API -->
          <div class="bg-gray-50 p-4 rounded-lg">
            <h3 class="font-semibold text-gray-800 mb-2">Transactions API <code class="bg-gray-100 px-2 py-1 rounded">/api/transactions</code></h3>
            <ul class="list-disc list-inside text-gray-600 space-y-1">
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /</code> - Get all transactions</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /:id</code> - Get transaction by ID</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /customer/:customerId</code> - Get customer's transactions</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">GET /loan/:loanId</code> - Get loan's transactions</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">POST /</code> - Create new transaction</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">PUT /:id</code> - Update transaction</li>
              <li><code class="bg-gray-100 px-2 py-1 rounded">DELETE /:id</code> - Delete transaction (Admin only)</li>
            </ul>
          </div>
        </div>
      </div>

      <div>
        <h2 class="text-xl font-semibold text-primary mb-2">Authentication</h2>
        <p class="text-gray-600">
          The server supports both JWT and session-based authentication. Use the navigation above to test the authentication flow.
        </p>
      </div>
    </div>
  </div>
</div>